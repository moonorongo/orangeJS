Demo:
    Ir armando la demo SpaceInvaders

Ir armando documentacion de esto.
ANTES DE NADA PROSEGUIR CON ESTO.

TODO:

    Corregir la parte en que toca la animacion de fin... ver los valores de speed y testear a bajas velocidades, para
    corroborar que esta haciendo bien... para SI esta bien, pero para otros games seguramente sera problematico.
    
ANTES DE SEGUIR CON LO DEMAS, DOCUMENTAR Y COMENTAR.    


Colisiones: 
    - agregar una propiedad que sea collisionPadding, en la que pueda especificar la cantidad de pixeles hacia adentro para restar
a la formula de colision
    - Agregar el tipo de colision que deseo detectar, si por boxes o por circles
    - Optimizar: que solo detecte probables candidatos. VER COMO.



Sprites: 
    - Seria interesante agregar algo para permitir rotaciones. MAS ADELANTE.

    
    
    
    
DEFINICIONES.
    
Sprite:
un sprite es un bloque que se puede mover, y que va a recibir eventos.
cada sprite puede tener asignada una ImageMap o una Animation.
si recibe un imageMap pone por defecto el primer cuadro/estado
si recibe un Animation, obtiene frame/estado y con la referencia al ImageMap pinta.



ImageMap:
Un ImageMap es un grafico con las distintas animaciones, 
tiene asignado una Image
unas propiedades que indican cuantos Movies tiene el imagemap (rows) y cuantos frames tiene cada estado.

y un conjunto de methodos para obtener de un estado un frame, 
una inicializacion automatica en base a la imagen seteada.
y alguna otra cosita
RESOLVED



Animation:
una animacion es una secuencia que se arma con un ImageMap, la animacion puede tener secuencias de programacion que me permita
armar animaciones complejas, como por ejemplo:

Loops, loops infinitos, rebotes, saltos a otros estados (util para hacer un inicio y un fin de la animacion),
la posicion del frame va a depender de un contador interno global de Orange.

cada estado tendra un step size, que sera algo asi como cada cuanto se avanzara un frame.

cada animacion tiene un _frame interno, que es el que avanza, y se pone en 0 al cambiar de estado.

tiene que tener un metodo interno para devolver un frame, estado, y una referencia al Imagemap asignado.

